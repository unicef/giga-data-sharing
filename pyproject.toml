[tool.poetry]
name = "giga-data-sharing"
version = "1.0.0"
description = "Giga Data Sharing API built with a lightweight FastAPI proxy on top of the reference Delta Sharing server implementation."
authors = ["Thinking Machines <hello@thinkingmachin.es>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
delta-sharing = "^1.0.5"
deltalake = "^0.12.0"
fastapi = "^0.112.2"
pydantic = { extras = ["email"], version = "^2.4.2" }
pydantic-settings = "^2.1.0"
uvicorn = { extras = ["standard"], version = "^0.30.6" }
gunicorn = "^23.0.0"
fastapi-azure-auth = "^4.4.0"
loguru = "^0.7.2"
azure-storage-blob = "^12.18.3"
orjson = "^3.10.7"
sqlalchemy = { extras = ["asyncio"], version = "^2.0.23" }
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
passlib = { extras = ["argon2"], version = "^1.7.4" }
asyncpg = "^0.29.0"
country-converter = "^1.1.1"
sentry-sdk = "0.10.2"
azure-storage-file-datalake = "^12.14.0"
aiohttp = ">=3.10.2"
urllib3 = ">=2.2.2"
certifi = ">=2024.07.04"

[tool.poetry.group.dev.dependencies]
ipython = "^8.16.1"
ruff = "^0.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
ignore-init-module-imports = true

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "UP"]
ignore = ["E203", "E266", "E501", "E402", "UP007"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator"]
