apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-sharing-proxy.fullname" . }}
  labels:
    {{- include "data-sharing-proxy.labels" . | nindent 4 }}
    giga-data-sharing/deployment-timestamp: {{ now | quote }}
  annotations:
    giga-data-sharing/deployment-timestamp: {{ now | quote }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "data-sharing-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "data-sharing-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "data-sharing-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            {{- range .Values.envSecrets }}
            - secretRef:
                {{- toYaml . | nindent 16 }}
            {{- end }}
            {{- range .Values.envConfigMaps }}
            - configMapRef:
                {{- toYaml . | nindent 16 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: init-wait-db
          image: bitnami/postgresql:16.1.0-debian-11-r13
          command:
            - /bin/sh
            - -c
            - >
              until pg_isready
              --host data-sharing-proxy-postgresql
              --port 5432
              --username giga-data-sharing;
              do echo waiting for database;
              sleep 2;
              done;
        - name: init-migrate-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /bin/bash
            - -c
            - alembic upgrade head
          envFrom:
            {{- range .Values.envSecrets }}
            - secretRef:
              {{- toYaml . | nindent 16 }}
            {{- end }}
            {{- range .Values.envConfigMaps }}
            - configMapRef:
              {{- toYaml . | nindent 16 }}
            {{- end }}
        - name: init-load-fixtures
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /bin/bash
            - -c
            - python -m scripts.load_fixtures roles api_keys
          envFrom:
            {{- range .Values.envSecrets }}
            - secretRef:
              {{- toYaml . | nindent 16 }}
            {{- end }}
            {{- range .Values.envConfigMaps }}
            - configMapRef:
              {{- toYaml . | nindent 16 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
